# Data Efficient Rainbow (DER) with MoEs params
import dopamine.discrete_domains.gym_lib
import dopamine.discrete_domains.run_experiment
import dopamine.jax.agents.dqn.dqn_agent
import dopamine.jax.agents.full_rainbow.full_rainbow_agent
import dopamine.labs.moes.architectures.networks
import dopamine.tf.replay_memory.prioritized_replay_buffer

JaxDQNAgent.gamma = 0.99
JaxDQNAgent.update_horizon = 3
JaxDQNAgent.min_replay_history = 20000  # agent steps
JaxDQNAgent.update_period = 4
JaxDQNAgent.target_update_period = 8000  # agent steps
JaxDQNAgent.epsilon_train = 0.01
JaxDQNAgent.epsilon_eval = 0.001
JaxDQNAgent.epsilon_decay_period = 250000  # agent steps
JaxDQNAgent.optimizer = 'adam'

JaxFullRainbowAgent.noisy = True
JaxFullRainbowAgent.dueling = True
JaxFullRainbowAgent.double_dqn = True
JaxFullRainbowAgent.num_atoms = 51
JaxFullRainbowAgent.vmax = 10.
JaxFullRainbowAgent.replay_scheme = 'prioritized'
JaxFullRainbowAgent.num_updates_per_train_step = 1
JaxFullRainbowAgent.epsilon_fn = @jax.agents.dqn.dqn_agent.linearly_decaying_epsilon

JaxFullRainbowAgent.network = @FullRainbowMoENetwork
FullRainbowMoENetwork.num_experts = 4
FullRainbowMoENetwork.expert_hidden_units = 512
FullRainbowMoENetwork.scale_hidden_layer = False
FullRainbowMoENetwork.use_extra_linear_layer = False
FullRainbowMoENetwork.moe_type = 'SOFTMOE'
FullRainbowMoENetwork.encoder_type = 'IMPALA'
FullRainbowMoENetwork.nn_scale = 1
FullRainbowMoENetwork.expert_type = 'SMALL'

# Note these parameters are different from C51's.
create_optimizer.learning_rate = 0.0000625
create_optimizer.eps = 0.00015

atari_lib.create_atari_environment.game_name = 'Pong'
# Atari 100K benchmark doesn't use sticky actions.
atari_lib.create_atari_environment.sticky_actions = True
create_runner.schedule = 'continuous_train'
create_agent.agent_name = 'moe_full_rainbow'
create_agent.debug_mode = True

Runner.num_iterations = 200
Runner.training_steps = 250000  # agent steps
Runner.max_steps_per_episode = 27000  # agent steps

OutOfGraphPrioritizedReplayBuffer.replay_capacity = 1000000
OutOfGraphPrioritizedReplayBuffer.batch_size = 32
