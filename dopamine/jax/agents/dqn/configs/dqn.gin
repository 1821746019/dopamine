# Hyperparameters follow the classic Nature DQN, but we modify as necessary to
# match those used in Rainbow (Hessel et al., 2018), to ensure apples-to-apples
# comparison.
import dopamine.discrete_domains.atari_lib
import dopamine.discrete_domains.run_experiment
import dopamine.jax.agents.dqn.dqn_agent
import dopamine.replay_memory.circular_replay_buffer

JaxDQNAgent.gamma = 0.99
JaxDQNAgent.update_horizon = 1
JaxDQNAgent.min_replay_history = 20000  # agent steps
JaxDQNAgent.update_period = 4
JaxDQNAgent.target_update_period = 8000  # agent steps
JaxDQNAgent.epsilon_train = 0.01
JaxDQNAgent.epsilon_eval = 0.001
JaxDQNAgent.epsilon_decay_period = 250000  # agent steps

atari_lib.create_atari_environment.game_name = 'Pong'
# Sticky actions with probability 0.25, as suggested by (Machado et al., 2017).
atari_lib.create_atari_environment.sticky_actions = True
create_runner.schedule = 'jax_train'  # To have flax.metrics.tensorboard.
create_agent.agent_name = 'jax_dqn'
create_agent.debug_mode = True
JaxRunner.num_iterations = 200
JaxRunner.training_steps = 250000  # agent steps
JaxRunner.evaluation_steps = 125000  # agent steps
JaxRunner.max_steps_per_episode = 27000  # agent steps

OutOfGraphReplayBuffer.replay_capacity = 1000000
OutOfGraphReplayBuffer.batch_size = 32
